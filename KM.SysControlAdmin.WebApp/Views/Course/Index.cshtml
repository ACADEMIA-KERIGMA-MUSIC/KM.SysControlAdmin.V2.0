@using KM.SysControlAdmin.EN.Trainer___EN
@using KM.SysControlAdmin.EN.Schedule___EN
@model IEnumerable<KM.SysControlAdmin.EN.Course___EN.Course>

@{
    ViewData["Title"] = "Cursos";
    List<Trainer> trainers = ViewBag.Trainers as List<Trainer>;
}

<link href="~/css/Course/DesignCreateAndEdit.css" rel="stylesheet" />

<br />
<h3>Mantenimiento De Cursos</h3>
<hr />

<form asp-action="Index">
    <div class="row">
        <div class="col-md-12">
            <div class="form-group-row">
                <div class="form-group">
                    <label for="Code">Código</label>
                    <input type="text" class="form-control" name="Code" placeholder="Ingresar" />
                </div>
                <div class="form-group">
                    <label for="Name">Nombre</label>
                    <input type="text" class="form-control" name="Name" placeholder="Ingresar" />
                </div>
                <div class="form-group">
                    <label for="Status">Estado</label>
                    <select class="form-select" name="Status">
                        <option value="" selected>SELECCIONAR</option>
                        <option value="1">ACTIVO</option>
                        <option value="2">INACTIVO</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="IdTrainer">Instructor</label>
                    <select class="form-select" name="IdTrainer">
                        <option selected value="">SELECCIONAR</option>
                        @foreach (var item in trainers!)
                        {
                            <option value="@item.Id">@item.Name @item.LastName - @item.Code</option>
                        }
                    </select>
                </div>
            </div>
        </div>
    </div>

    <br />
    <div class="col-md-12">
        <div class="form-group">
            <input type="submit" class="btn btn-outline-success m-1" value="Buscar Curso" />
            |
            <a asp-action="CreateCourse" class="btn btn-primary">Crear Nuevo Curso</a>
        </div>
    </div>
</form>

<br />
<h2 style="text-align:center;">Tabla de Resultados</h2>
<br />

<table id="ResultData" class="hover" style="width:100%; text-align:center;">
    <thead>
        <tr>
            <th style="text-align:center;">
                @Html.DisplayNameFor(model => model.Code)
            </th>
            <th style="text-align:center;">
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th style="text-align:center;">
                @Html.DisplayNameFor(model => model.MaxStudent)
            </th>
            <th style="text-align:center;">
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th style="text-align:center;">Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Code)</td>
                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                <td>@Html.DisplayFor(modelItem => item.MaxStudent) Máximo</td>
                <td>
                    @(item.Status == 1 ? "ACTIVO" :
                        item.Status == 2 ? "INACTIVO" : "")
                </td>
                <td>
                    <a asp-action="EditCourse" asp-route-id="@item.Id" class="btn btn-warning m-1" title="Modificar Curso">
                        <i class="fas fa-edit"></i>
                    </a>
                    <a asp-action="DetailsCourse" asp-route-id="@item.Id" class="btn btn-outline-info m-1" title="Detalles Del Curso">
                        <i class="fas fa-info-circle"></i>
                    </a>
                    <a asp-action="DeleteCourse" asp-route-id="@item.Id" class="btn btn-danger m-1" title="Eliminar Curso">
                        <i class="fas fa-trash-alt"></i>
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>

<br />

@section Scripts {
    <script>
        new DataTable('#ResultData', {
            info: false,
            order: false,
            responsive: true,
            pagingType: 'simple_numbers',
            language: {
                search: 'Búsqueda Rápida:',
                searchPlaceholder: 'Ingresar',
                lengthMenu: '_MENU_ Mostrar',
                emptyTable: 'No hay datos que coincidan con su criterio de búsqueda.',
                zeroRecords: 'No existen registros según la búsqueda',
                processing: 'Procesando...'
            }
        });

        const Toast = Swal.mixin({
            toast: true,
            position: "top-end",
            showConfirmButton: false,
            timer: 8000,
            timerProgressBar: true,
            didOpen: (toast) => {
                toast.addEventListener('mouseenter', Swal.stopTimer);
                toast.addEventListener('mouseleave', Swal.resumeTimer);
            }
        });

        const successMessages = {
            Creado: '@TempData["SuccessMessageCreate"]',
            Modificado: '@TempData["SuccessMessageUpdate"]',
            Eliminado: '@TempData["SuccessMessageDelete"]'
        };

        for (const messageType in successMessages) {
            const message = successMessages[messageType];
            if (message) {
                Toast.fire({
                    icon: "success",
                    title: `¡${messageType} Exitosamente!`,
                    text: message
                });
            }
        }
    </script>
}